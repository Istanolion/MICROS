	processor 16f877
	include<p16f877.inc>
	
	ORG 0
	GOTO inicio
	ORG 5
inicio:
	CLRF PORTB			;LIMPIAMOS EL PUERTO B 
	BSF STATUS,RP0		;PONEMOS RP1 EN 1 DEL REG STATUS
	BCF STATUS,RP1			;PONEMOS RP0 EN 0 DEL REG STATUS, UBICANDONOS EN EL BANCO 01
	CLRF TRISB				;PONEMOS EL PUERTO B COMO SALIDA
	BSF TXSTA,BRGH			;PRENDEMOS EL BIT BRGH DEL REG TXSTA SEÑALANDO QUE ES TRANSMISION DE ALTA VELOCIDAD
	MOVLW D'129'			;CARGAMOS EL VALOR DECIMAL AL REG W
	MOVWF SPBRG				;MANDAMOS EL VALOR DE W AL SPBRG QUE DA EL VALOR DEL BAUD-RATE=9600

	BCF STATUS,RP0			;REGRESAMOS AL BANCO 00
	BSF RCSTA,SPEN			;HABILITAMOS EL PUERTO SERIE
	BSF RCSTA,CREN			;COMUNICACION CONTINUA (ASYNC)
recibe: BTFSS PIR1,RCIF		;CHECAMOS EL BIT RCIF DE PIR1, PARA VER SI SE COMPLETO LA RECEPCION DEL MENSAJE
	GOTO recibe				;SINO SE REGRESA EN LOOP
	MOVF RCREG,W			;SI SE COMPLETO EL MENSAJE, MANDAMOS ESTE AL REG W
	SUBLW '0'				;LE RESTAMOS A W EL VALOR DEL SIMBOLO '0'
	BTFSC STATUS,Z			;CHECAMOS LA BANDERA DE ZERO
	GOTO poner0
	MOVF RCREG,W			;LE VOLVEMOS A DAR EL VALOR DEL DATO QUE RECIBIO
	SUBLW '1'				;LE RESTAMOS A W EL VALOR DEL SIMBOLO '1'
	BTFSC STATUS,Z			;CHECAMOS LA BANDERA DE ZERO
	GOTO poner1
	GOTO recibe
poner0:
	BCF PORTB,0				;APAGAMOS EL PRIMER BIT DEL PUERTOB
	GOTO recibe				;REGRESAMOS AL COMPORTAMIENTO DE RECEPCION
poner1:
	BSF PORTB,0				;PRENDEMOS EL PRIMER BIT DEL PUERTOB
	GOTO recibe				;REGRESAMOS AL COMPORTAMIENTO DE RECEPCION
	
;FUNCIONALMENTE, RECIBE UN MENSAJE Y SI ES 1 PRENDEMOS EL PRIMER BIT DEL PORTB SI ES 0 LO APAGAMOS
	END